{"ast":null,"code":"import React from 'react';\nimport * as Yup from \"yup\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Validation() {\n  let phoneRegex = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/;\n  let validationSchema = Yup.object({\n    name: Yup.string().min(3, \"name must be at least 3 characters \").max(10, \"name must be at most 10 characters \").required(\"name is required\"),\n    email: Yup.string().email(\"email  Invalid\").required(\"email required\"),\n    phone: Yup.string().matches(phoneRegex, \"Wrong Number\").required(\"phone required\"),\n    password: Yup.string().matches(/^[A-Z][a-z0-9]{5-10}$/),\n    rePassword: Yup.string().oneOf([Yup.ref(\"password \")], \" password and rePassword doesn't match\")\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["React","Yup","Fragment","_Fragment","jsxDEV","_jsxDEV","Validation","phoneRegex","validationSchema","object","name","string","min","max","required","email","phone","matches","password","rePassword","oneOf","ref","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/سطح المكتب/3K Store/3k-store/src/Components/Validation/Validation.jsx"],"sourcesContent":["import React from 'react'\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function Validation() {\r\n  let phoneRegex = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/;\r\n  let validationSchema = Yup.object({\r\n    name: Yup.string()\r\n      .min(3, \"name must be at least 3 characters \")\r\n      .max(10, \"name must be at most 10 characters \")\r\n      .required(\"name is required\"),\r\n    email: Yup.string().email(\"email  Invalid\").required(\"email required\"),\r\n    phone: Yup.string()\r\n      .matches(phoneRegex, \"Wrong Number\")\r\n      .required(\"phone required\"),\r\n    password: Yup.string().matches(/^[A-Z][a-z0-9]{5-10}$/),\r\n    rePassword: Yup.string().oneOf(\r\n      [Yup.ref(\"password \")],\r\n      \" password and rePassword doesn't match\"\r\n    ),\r\n  });\r\n  return (\r\n    <>\r\n    \r\n    \r\n    </>\r\n  )\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,IAAIC,UAAU,GAAG,gDAAgD;EACjE,IAAIC,gBAAgB,GAAGP,GAAG,CAACQ,MAAM,CAAC;IAChCC,IAAI,EAAET,GAAG,CAACU,MAAM,CAAC,CAAC,CACfC,GAAG,CAAC,CAAC,EAAE,qCAAqC,CAAC,CAC7CC,GAAG,CAAC,EAAE,EAAE,qCAAqC,CAAC,CAC9CC,QAAQ,CAAC,kBAAkB,CAAC;IAC/BC,KAAK,EAAEd,GAAG,CAACU,MAAM,CAAC,CAAC,CAACI,KAAK,CAAC,gBAAgB,CAAC,CAACD,QAAQ,CAAC,gBAAgB,CAAC;IACtEE,KAAK,EAAEf,GAAG,CAACU,MAAM,CAAC,CAAC,CAChBM,OAAO,CAACV,UAAU,EAAE,cAAc,CAAC,CACnCO,QAAQ,CAAC,gBAAgB,CAAC;IAC7BI,QAAQ,EAAEjB,GAAG,CAACU,MAAM,CAAC,CAAC,CAACM,OAAO,CAAC,uBAAuB,CAAC;IACvDE,UAAU,EAAElB,GAAG,CAACU,MAAM,CAAC,CAAC,CAACS,KAAK,CAC5B,CAACnB,GAAG,CAACoB,GAAG,CAAC,WAAW,CAAC,CAAC,EACtB,wCACF;EACF,CAAC,CAAC;EACF,oBACEhB,OAAA,CAAAF,SAAA,mBAGE,CAAC;AAEP;AAACmB,EAAA,GAvBuBhB,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}